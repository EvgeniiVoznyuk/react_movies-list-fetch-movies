{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","getMovie","url","fetch","then","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setMovie","query","setQuery","loadingError","setLoadingError","findMovie","a","movieFromServer","Response","Title","Plot","Poster","imdbID","undefined","htmlFor","onChange","event","target","value","type","id","placeholder","cn","onClick","disabled","App","setMovies","customIncludes","array","item","ind","forEach","element","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8491b58.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a\n          href={`https://www.imdb.com/title/${imdbUrl}`}\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbUrl} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=2d32b2ea&t=';\n\nfunction request(url) {\n  return fetch(`${BASE_URL}${url}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport function getMovie(title) {\n  return request(title);\n}","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { getMovie } from '../../api/api';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movie, setMovie] = useState();\n  const [query, setQuery] = useState('');\n  const [loadingError, setLoadingError] = useState(false);\n\n  const findMovie = async() => {\n    const movieFromServer = await getMovie(query);\n\n    if (movieFromServer.Response === 'True') {\n      setMovie({\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster,\n        imdbUrl: movieFromServer.imdbID,\n      });\n    } else {\n      setMovie(undefined);\n      setLoadingError(true);\n    }\n  };\n\n  const handleChange = (event) => {\n    setQuery(event.target.value);\n    setLoadingError(false);\n  };\n\n  const sendMovie = () => {\n    addMovie(movie);\n    setMovie(undefined);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              onChange={handleChange}\n              value={query}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input', { 'is-danger': loadingError },\n              )}\n            />\n          </div>\n\n          {loadingError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={sendMovie}\n              disabled={!movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n\n  const addMovies = (newMovie) => {\n    if (!customIncludes(movies, newMovie)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  const customIncludes = (array, item) => {\n    let ind = 0;\n\n    array.forEach((element) => {\n      if (element.imdbUrl === item.imdbUrl) {\n        ind = 1;\n      }\n    });\n\n    return ind;\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}